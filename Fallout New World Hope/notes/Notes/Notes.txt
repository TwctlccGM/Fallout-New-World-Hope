------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
/// THINGS TO FIX

	- Items (stims and doc bags) get consumed even when they have no effect.
	- Items not in player's inventory appear in battle (but at least they are greyed out and unusable)
	- Fix up battle menu a bit (make options appear in order: Attack -> Abilities -> Items -> Flee)
	- Pointer in inventory menu sometimes goes up too far when selecting an item (idk what triggers this to start happening)
	- Make abilities/bets greyed out and unselectable when not enough AP/BET to use them (atm they are 'failed' in obj_battle Create event)
	- Interact box appears in overworld
	- Move interact code OUT of player's Draw event (and adjust it so that the interact box is positioned correctly)
	- Rearrange some code (e.g. put key input events like opening the inventory into the player object for consistent keybinds)
	- Keycard item pickup isn't working for some reason
	
	// Not sure if fixable
	- When colliding with an entity from the bottom then moving diagonally across them, if it transitions to a tile collision, the player can clip through a 1 pixel gap.
	Solution: Make sure entity collision (e.g. a door) overlaps tile collision by 1 pixel to account for this quirk.

------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
/// FEATURES TO IMPLEMENT

	- Battle text box shows description of hovered action
	- Keys/Keycards to unlock doors.
		Make individual keycards (e.g. X-8 keycard to open X-8 door)
	- Implement barter system later on and have prices be affected by CHA.
	- More items (don't add all of these, just pick what's best)
		Super Stimpak	(stronger stim)
		Auto-Stim		(auto heals when below 50% health)
		Auto-SuperStim	(auto heals when below 25% health)
			Maybe make the auto-stims a Vaultie ability?
		Stealth Boy		(become untargetable)
		Mentats			(increase BET)
		Turbo			(move twice)
		Hydra			(heal over time)
		Rebound			(+2AP regen per turn instead of +1)
		Steady			(Improved accuracy)
			Implement accuracy system first
		Antivenom		(Cures cazador/nightstalker poison)
	- Entity collision (e.g. doors, dog, but NOT items)


------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
/// NOTES

Adding/Removing party members:
	The player's current party is stored as an array of structs 'global.party' in scr_game_data.
	The information of all party members is stored as an array of structs 'global.party_data' in scr_game data.
	To add a party member to the array, use this function: 'array_insert(global.party, array_length(global.party), global.party_data[PARTY_CYBERDOG]);'
	It inserts the party member data from 'party_data' into the current 'party' (replace 'CYBERDOG' with the appropriate macro).

Changing UI colour:
	Right now there are 3 sets of sprites for different UI colours (orange, green, blue).
	The UI colour is set manually at the bottom of scr_game_data. Cannot be changed in-game atm.
	Should change this system to use a shader so that there's no need for repeat sprites and so many global UI variables (just one global UI colour shader variable).

Damage/Defense calculation:
	Damage calculation starts with the user's STR/PER for damage.
		This then get multiplied by an 'attack_mult' value.
			'attack_mult' is made up of various factors (e.g. equipped weapon, buffs/debuffs).
	Defense calculation starts with the target's END for defense.
		This then gets multiplied by a 'defense_mult' value.
			'defense_mult' is made up of various factors (e.g. equipped armour, buffs/debuffs).
			
Creating text boxes/dialogue:
	Objects that have 'par_entity' as their parent object are considered 'entities'.
	Entities start with the variables: 
		'entity_activate_script' (tells the object what to do when activated via player collision)
		'entity_activate_args' (supplies the arguments to be used by the script)
	To give an entity a textbox, give it the 'new_text_box' script and give it a string as the argument.
		Example: ["Bark!", 1, ["1:Response A", "2:Response B"] ]
	Dialogue is managed via a function in 'scr_dialogue'.
		Each 'case' is the number at the beginning of a response string (e.g."1:Response A").
		Cases can execute code and/or ask for further responses.
			Example: case 2: new_text_box("You gave response B!\nAny further response?", 1, ["3:Yes", "0:No"]); break;

Collision:
	Tile-based collision:
		Uses the 'tiles_collision' tileset. 
		The 'collision_map' variable is set to the 'Tiles_Collision' layer so every room must have the layer named exactly that.
	Entity-based collision:
		Child objects of the 'par_entity' parent object must have the 'entity_collision' variable ticked to true to have collision.
		Diagonal collision doesn't work properly with the new collision system. For places that require diagonal collision (e.g. Overworld), use the old 'move_and_collide' system instead.
			Keep in mind that the old system doesn't allow for entity/tile collisions. Perhaps there's someway to allow entity/tile collisions while using 'move_and_collide'?
			

------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------